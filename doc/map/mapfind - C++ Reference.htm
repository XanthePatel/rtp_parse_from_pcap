<!DOCTYPE HTML>
<!-- saved from url=(0048)http://www.cplusplus.com/reference/map/map/find/ -->
<!DOCTYPE html PUBLIC "" ""><HTML><HEAD><META content="IE=11.0000" 
http-equiv="X-UA-Compatible">
 
<META http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
<TITLE>map::find - C++ Reference</TITLE> <LINK href="http://www.cplusplus.com/reference/map/map/find/" 
rel="canonical"> <LINK href="/favicon.ico" rel="shortcut icon" type="image/x-icon"> 
<LINK href="mapfind%20-%20C++%20Reference_files/main.css" rel="stylesheet" type="text/css"> 
<SCRIPT src="mapfind%20-%20C++%20Reference_files/main.js" type="text/javascript"></SCRIPT>
 
<META name="GENERATOR" content="MSHTML 11.00.9600.17496"></HEAD> 
<BODY>
<DIV id="I_top">
<DIV id="I_header">
<DIV id="I_logo"><A title="cplusplus.com" href="http://www.cplusplus.com/">
<DIV></DIV></A></DIV>
<DIV id="I_search">
<FORM id="search" action="/search.do" method="get">Search: 
<INPUT name="q" class="txt" size="20"> <INPUT class="btn" type="submit" value="Go"> 
</FORM></DIV>
<DIV id="I_bar">
<UL>
  <LI><A href="http://www.cplusplus.com/reference/">Reference</A></LI>
  <LI><A href="http://www.cplusplus.com/reference/map/">&lt;map&gt;</A></LI>
  <LI><A href="http://www.cplusplus.com/reference/map/map/">map</A></LI>
  <LI class="here">find</LI></UL></DIV>
<DIV class="C_LoginBox" id="I_user"><SPAN title="ajax"></SPAN></DIV></DIV></DIV>
<DIV id="I_mid">
<DIV id="I_wrap">
<DIV id="I_minheight"></DIV>
<DIV id="I_main">
<DIV class="C_support">
<SCRIPT type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</SCRIPT>

<DIV class="C_ad728">
<SCRIPT type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</SCRIPT>
 
<SCRIPT src="mapfind%20-%20C++%20Reference_files/f.txt" type="text/javascript"></SCRIPT>
</DIV>
<DIV class="C_supportbottom"></DIV></DIV>
<DIV id="I_content">
<DIV class="C_doc">
<DIV id="I_type">public member function </DIV>
<DIV id="I_file">&lt;map&gt; </DIV>
<H1><SPAN title="namespace std" class="namespace">std::</SPAN><A href="http://www.cplusplus.com/reference/map/map/">map</A>::find</H1>
<DIV class="C_prototype">
<PRE>      iterator find (const key_type&amp; k);
const_iterator find (const key_type&amp; k) const;</PRE></DIV>
<DIV id="I_description">Get iterator to element</DIV><SECTION id="description">
Searches the container for an element with a <I>key</I> equivalent to <I>k</I> 
and returns an iterator to it if found, otherwise it returns an iterator to <A 
href="http://www.cplusplus.com/map::end">map::end</A>.<BR><BR>Two <I>keys</I> 
are considered equivalent if the container's <A href="http://www.cplusplus.com/map::key_comp">comparison 
object</A> returns <TT>false</TT> reflexively (i.e., no matter the order in 
which the elements are passed as arguments).<BR><BR>Another member function, <A 
href="http://www.cplusplus.com/map::count">map::count</A>, can be used to just 
check whether a particular key exists.<BR></SECTION><BR><SECTION 
id="parameters">
<H3>Parameters</H3>
<DL>
  <DT>k</DT>
  <DD>Key to be searched for.<BR>Member type <TT>key_type</TT> is the type of 
  the keys for the elements in the container, defined in <A href="http://www.cplusplus.com/map">map</A> 
  as an alias of its first template parameter 
(<TT>Key</TT>).</DD></DL></SECTION><BR><SECTION id="return">
<H3>Return value</H3>An iterator to the element, if an element with specified 
key is found, or <A href="http://www.cplusplus.com/map::end">map::end</A> 
otherwise.<BR><BR>If the <A href="http://www.cplusplus.com/map">map</A> object 
is const-qualified, the function returns a <TT>const_iterator</TT>. Otherwise, 
it returns an <TT>iterator</TT>.<BR><BR>Member types <TT>iterator</TT> and 
<TT>const_iterator</TT> are <A href="http://www.cplusplus.com/BidirectionalIterator">bidirectional 
iterator</A> types pointing to elements (of type <TT>value_type</TT>).<BR>Notice 
that <TT>value_type</TT> in <A href="http://www.cplusplus.com/map">map</A> 
containers is an alias of <TT><A 
href="http://www.cplusplus.com/pair">pair</A>&lt;const key_type, 
mapped_type&gt;</TT>.<BR></SECTION><BR><SECTION id="example">
<H3>Example</H3>
<DIV class="auto">
<TABLE class="snippet">
  <TBODY>
  <TR>
    <TD class="rownum">
<PRE><CODE>1<BR>2<BR>3<BR>4<BR>5<BR>6<BR>7<BR>8<BR>9<BR>10<BR>11<BR>12<BR>13<BR>14<BR>15<BR>16<BR>17<BR>18<BR>19<BR>20<BR>21<BR>22<BR>23<BR>24<BR>25<BR></CODE></PRE></TD>
    <TD class="source">
<PRE><CODE><CITE>// map::find</CITE>
<DFN>#include &lt;iostream&gt;</DFN>
<DFN>#include &lt;map&gt;</DFN>

<VAR>int</VAR> main ()
{
  std::map&lt;<VAR>char</VAR>,<VAR>int</VAR>&gt; mymap;
  std::map&lt;<VAR>char</VAR>,<VAR>int</VAR>&gt;::iterator it;

  mymap[<KBD>'a'</KBD>]=50;
  mymap[<KBD>'b'</KBD>]=100;
  mymap[<KBD>'c'</KBD>]=150;
  mymap[<KBD>'d'</KBD>]=200;

  it=mymap.find(<KBD>'b'</KBD>);
  mymap.erase (it);
  mymap.erase (mymap.find(<KBD>'d'</KBD>));

  <CITE>// print content:</CITE>
  std::cout &lt;&lt; <KBD>"elements in mymap:"</KBD> &lt;&lt; <KBD>'\n'</KBD>;
  std::cout &lt;&lt; <KBD>"a =&gt; "</KBD> &lt;&lt; mymap.find(<KBD>'a'</KBD>)-&gt;second &lt;&lt; <KBD>'\n'</KBD>;
  std::cout &lt;&lt; <KBD>"c =&gt; "</KBD> &lt;&lt; mymap.find(<KBD>'c'</KBD>)-&gt;second &lt;&lt; <KBD>'\n'</KBD>;

  <VAR>return</VAR> 0;
}</CODE></PRE></TD>
    <TD class="C_btnholder"></TD></TR></TBODY></TABLE></DIV><BR><BR>Output:<BR>
<DIV class="auto">
<TABLE class="snippet">
  <TBODY>
  <TR>
    <TD class="output">
<PRE><SAMP>elements in mymap:
a =&gt; 50
c =&gt; 150
</SAMP></PRE></TD></TR></TBODY></TABLE></DIV></SECTION><BR><SECTION 
id="complexity">
<H3>Complexity</H3>Logarithmic in <A 
href="http://www.cplusplus.com/map::size">size</A>.<BR></SECTION><BR><SECTION 
id="validity">
<H3>Iterator validity</H3>No changes.<BR></SECTION><BR><SECTION id="access">
<H3>Data races</H3>The container is accessed (neither the const nor the 
non-const versions modify the container).<BR>No mapped values are accessed: 
concurrently accessing or modifying elements is safe.<BR></SECTION><BR><SECTION 
id="exceptions">
<H3>Exception safety</H3><B>Strong guarantee:</B> if an exception is thrown, 
there are no changes in the container.<BR></SECTION><BR><SECTION id="see">
<H3>See also</H3>
<DL class="links">
  <DT><A 
  href="http://www.cplusplus.com/reference/map/map/operator[]/"><B>map::operator[]</B></A></DT>
  <DD>Access element <SPAN class="typ">(public member function )</SPAN></DD></DL>
<DL class="links">
  <DT><A 
  href="http://www.cplusplus.com/reference/map/map/count/"><B>map::count</B></A></DT>
  <DD>Count elements with a specific key <SPAN class="typ">(public member 
  function )</SPAN></DD></DL>
<DL class="links">
  <DT><A 
  href="http://www.cplusplus.com/reference/map/map/lower_bound/"><B>map::lower_bound</B></A></DT>
  <DD>Return iterator to lower bound <SPAN class="typ">(public member function
   )</SPAN></DD></DL>
<DL class="links">
  <DT><A 
  href="http://www.cplusplus.com/reference/map/map/upper_bound/"><B>map::upper_bound</B></A></DT>
  <DD>Return iterator to upper bound <SPAN class="typ">(public member function
   )</SPAN></DD></DL></SECTION></DIV>
<DIV id="CH_bb"></DIV></DIV></DIV>
<DIV id="I_nav">
<DIV class="sect root">
<H3><B><A href="http://www.cplusplus.com/">C++</A></B></H3>
<UL>
  <LI class="folder info"><A 
  href="http://www.cplusplus.com/info/">Information</A></LI>
  <LI class="folder doc"><A 
  href="http://www.cplusplus.com/doc/">Tutorials</A></LI>
  <LI class="folder selected reference"><A href="http://www.cplusplus.com/reference/">Reference</A></LI>
  <LI class="folder articles"><A 
  href="http://www.cplusplus.com/articles/">Articles</A></LI>
  <LI class="folder forum"><A 
  href="http://www.cplusplus.com/forum/">Forum</A></LI></UL></DIV>
<DIV class="C_BoxLabels C_BoxSort sect" id="reference_box">
<H3><B><A href="http://www.cplusplus.com/reference/">Reference</A></B></H3>
<UL>
  <LI class="C_Collapsable collapsed">
  <H4><A href="http://www.cplusplus.com/reference/clibrary/">C library:</A></H4>
  <UL>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cassert/"><SPAN>&lt;cassert&gt; 
    (assert.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cctype/"><SPAN>&lt;cctype&gt; 
    (ctype.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cerrno/"><SPAN>&lt;cerrno&gt; 
    (errno.h)</SPAN></A></LI>
    <LI class="c99 cpp11 folder"><A href="http://www.cplusplus.com/reference/cfenv/"><SPAN>&lt;cfenv&gt; 
    (fenv.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cfloat/"><SPAN>&lt;cfloat&gt; 
    (float.h)</SPAN></A></LI>
    <LI class="c99 cpp11 folder"><A href="http://www.cplusplus.com/reference/cinttypes/"><SPAN>&lt;cinttypes&gt; 
    (inttypes.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/ciso646/"><SPAN>&lt;ciso646&gt; 
    (iso646.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/climits/"><SPAN>&lt;climits&gt; 
    (limits.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/clocale/"><SPAN>&lt;clocale&gt; 
    (locale.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cmath/"><SPAN>&lt;cmath&gt; 
    (math.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/csetjmp/"><SPAN>&lt;csetjmp&gt; 
    (setjmp.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/csignal/"><SPAN>&lt;csignal&gt; 
    (signal.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cstdarg/"><SPAN>&lt;cstdarg&gt; 
    (stdarg.h)</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/cstdbool/"><SPAN>&lt;cstdbool&gt; 
    (stdbool.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cstddef/"><SPAN>&lt;cstddef&gt; 
    (stddef.h)</SPAN></A></LI>
    <LI class="c99 cpp11 folder"><A href="http://www.cplusplus.com/reference/cstdint/"><SPAN>&lt;cstdint&gt; 
    (stdint.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cstdio/"><SPAN>&lt;cstdio&gt; 
    (stdio.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cstdlib/"><SPAN>&lt;cstdlib&gt; 
    (stdlib.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cstring/"><SPAN>&lt;cstring&gt; 
    (string.h)</SPAN></A></LI>
    <LI class="c99 cpp11 folder"><A href="http://www.cplusplus.com/reference/ctgmath/"><SPAN>&lt;ctgmath&gt; 
    (tgmath.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/ctime/"><SPAN>&lt;ctime&gt; 
    (time.h)</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/cuchar/"><SPAN>&lt;cuchar&gt; 
    (uchar.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cwchar/"><SPAN>&lt;cwchar&gt; 
    (wchar.h)</SPAN></A></LI>
    <LI class="c90 c99 arm cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/cwctype/"><SPAN>&lt;cwctype&gt; 
    (wctype.h)</SPAN></A></LI></UL></LI>
  <LI class="C_Collapsable">
  <H4><A href="http://www.cplusplus.com/reference/stl/">Containers:</A></H4>
  <UL>
    <LI class="cpp11 folder"><A 
    href="http://www.cplusplus.com/reference/array/"><SPAN>&lt;array&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/deque/"><SPAN>&lt;deque&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/forward_list/"><SPAN>&lt;forward_list&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/list/"><SPAN>&lt;list&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 selected folder"><A href="http://www.cplusplus.com/reference/map/"><SPAN>&lt;map&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/queue/"><SPAN>&lt;queue&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/set/"><SPAN>&lt;set&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/stack/"><SPAN>&lt;stack&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/unordered_map/"><SPAN>&lt;unordered_map&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/unordered_set/"><SPAN>&lt;unordered_set&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/vector/"><SPAN>&lt;vector&gt;</SPAN></A></LI></UL></LI>
  <LI class="C_Collapsable collapsed">
  <H4><A 
  href="http://www.cplusplus.com/reference/iolibrary/">Input/Output:</A></H4>
  <UL>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/fstream/"><SPAN>&lt;fstream&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/iomanip/"><SPAN>&lt;iomanip&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/ios/"><SPAN>&lt;ios&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/iosfwd/"><SPAN>&lt;iosfwd&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/iostream/"><SPAN>&lt;iostream&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/istream/"><SPAN>&lt;istream&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/ostream/"><SPAN>&lt;ostream&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/sstream/"><SPAN>&lt;sstream&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/streambuf/"><SPAN>&lt;streambuf&gt;</SPAN></A></LI></UL></LI>
  <LI class="C_Collapsable collapsed">
  <H4><A 
  href="http://www.cplusplus.com/reference/multithreading/">Multi-threading:</A></H4>
  <UL>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/atomic/"><SPAN>&lt;atomic&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/condition_variable/"><SPAN>&lt;condition_variable&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/future/"><SPAN>&lt;future&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A 
    href="http://www.cplusplus.com/reference/mutex/"><SPAN>&lt;mutex&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/thread/"><SPAN>&lt;thread&gt;</SPAN></A></LI></UL></LI>
  <LI class="C_Collapsable collapsed">
  <H4><A href="http://www.cplusplus.com/reference/std/">Other:</A></H4>
  <UL>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/algorithm/"><SPAN>&lt;algorithm&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/bitset/"><SPAN>&lt;bitset&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/chrono/"><SPAN>&lt;chrono&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/codecvt/"><SPAN>&lt;codecvt&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/complex/"><SPAN>&lt;complex&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/exception/"><SPAN>&lt;exception&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/functional/"><SPAN>&lt;functional&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/initializer_list/"><SPAN>&lt;initializer_list&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/iterator/"><SPAN>&lt;iterator&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/limits/"><SPAN>&lt;limits&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/locale/"><SPAN>&lt;locale&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/memory/"><SPAN>&lt;memory&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/new/"><SPAN>&lt;new&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/numeric/"><SPAN>&lt;numeric&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/random/"><SPAN>&lt;random&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A 
    href="http://www.cplusplus.com/reference/ratio/"><SPAN>&lt;ratio&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A 
    href="http://www.cplusplus.com/reference/regex/"><SPAN>&lt;regex&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/stdexcept/"><SPAN>&lt;stdexcept&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/string/"><SPAN>&lt;string&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/system_error/"><SPAN>&lt;system_error&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A 
    href="http://www.cplusplus.com/reference/tuple/"><SPAN>&lt;tuple&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/typeindex/"><SPAN>&lt;typeindex&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/typeinfo/"><SPAN>&lt;typeinfo&gt;</SPAN></A></LI>
    <LI class="cpp11 folder"><A href="http://www.cplusplus.com/reference/type_traits/"><SPAN>&lt;type_traits&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/utility/"><SPAN>&lt;utility&gt;</SPAN></A></LI>
    <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/valarray/"><SPAN>&lt;valarray&gt;</SPAN></A></LI></UL></LI></UL></DIV>
<DIV class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="map_box">
<H3><B><A 
href="http://www.cplusplus.com/reference/map/">&lt;map&gt;</A></B></H3>
<UL>
  <LI class="cpp98 cpp11 selected folder"><A href="http://www.cplusplus.com/reference/map/map/"><SPAN>map</SPAN></A></LI>
  <LI class="cpp98 cpp11 folder"><A href="http://www.cplusplus.com/reference/map/multimap/"><SPAN>multimap</SPAN></A></LI></UL></DIV>
<DIV class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="map_box">
<H3><B><A href="http://www.cplusplus.com/reference/map/map/">map</A></B></H3>
<UL>
  <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/map/"><SPAN>map::map</SPAN></A></LI>
  <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/~map/"><SPAN>map::~map</SPAN></A></LI>
  <LI class="C_Collapsable">
  <H4>member functions:</H4>
  <UL>
    <LI class="cpp11"><A 
    href="http://www.cplusplus.com/reference/map/map/at/"><SPAN>map::at</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/begin/"><SPAN>map::begin</SPAN></A></LI>
    <LI class="cpp11"><A href="http://www.cplusplus.com/reference/map/map/cbegin/"><SPAN>map::cbegin</SPAN></A></LI>
    <LI class="cpp11"><A 
    href="http://www.cplusplus.com/reference/map/map/cend/"><SPAN>map::cend</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/clear/"><SPAN>map::clear</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/count/"><SPAN>map::count</SPAN></A></LI>
    <LI class="cpp11"><A href="http://www.cplusplus.com/reference/map/map/crbegin/"><SPAN>map::crbegin</SPAN></A></LI>
    <LI class="cpp11"><A href="http://www.cplusplus.com/reference/map/map/crend/"><SPAN>map::crend</SPAN></A></LI>
    <LI class="cpp11"><A href="http://www.cplusplus.com/reference/map/map/emplace/"><SPAN>map::emplace</SPAN></A></LI>
    <LI class="cpp11"><A href="http://www.cplusplus.com/reference/map/map/emplace_hint/"><SPAN>map::emplace_hint</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/empty/"><SPAN>map::empty</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/end/"><SPAN>map::end</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/equal_range/"><SPAN>map::equal_range</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/erase/"><SPAN>map::erase</SPAN></A></LI>
    <LI class="cpp98 cpp11 selected"><A href="http://www.cplusplus.com/reference/map/map/find/"><SPAN>map::find</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/get_allocator/"><SPAN>map::get_allocator</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/insert/"><SPAN>map::insert</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/key_comp/"><SPAN>map::key_comp</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/lower_bound/"><SPAN>map::lower_bound</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/max_size/"><SPAN>map::max_size</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/operator=/"><SPAN>map::operator=</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/operator[]/"><SPAN>map::operator[]</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/rbegin/"><SPAN>map::rbegin</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/rend/"><SPAN>map::rend</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/size/"><SPAN>map::size</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/swap/"><SPAN>map::swap</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/upper_bound/"><SPAN>map::upper_bound</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/value_comp/"><SPAN>map::value_comp</SPAN></A></LI></UL></LI>
  <LI class="C_Collapsable">
  <H4>non-member overloads:</H4>
  <UL>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/operators/"><SPAN>relational 
    operators (map)</SPAN></A></LI>
    <LI class="cpp98 cpp11"><A href="http://www.cplusplus.com/reference/map/map/swap-free/"><SPAN>swap 
    (map)</SPAN></A></LI></UL></LI></UL></DIV>
<DIV id="I_subnav"></DIV>
<DIV class="C_ad234">
<SCRIPT type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</SCRIPT>
 
<SCRIPT src="mapfind%20-%20C++%20Reference_files/f.txt" type="text/javascript"></SCRIPT>
 </DIV></DIV>
<DIV id="I_midclear"></DIV></DIV></DIV>
<DIV id="I_bottom">
<DIV id="I_footer"><A href="http://www.cplusplus.com/">Home page</A> | <A href="http://www.cplusplus.com/privacy.do">Privacy 
policy</A><BR>© cplusplus.com, 2000-2015 - All rights reserved - 
<I>v3.1</I><BR><A href="http://www.cplusplus.com/contact.do?referrer=www.cplusplus.com%2Freference%2Fmap%2Fmap%2Ffind%2F">Spotted 
an error? contact us</A> </DIV></DIV>
<SCRIPT type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','/reference/edit.cgi?a=map+map+find'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='/reference/delete.cgi?a=map+map+find'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</SCRIPT>
 </BODY></HTML>
